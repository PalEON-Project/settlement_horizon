try(dev.off())
core.dat <- data.frame(depths = x$sample.meta$depths[good.samps], pol.counts[,most.common])
write.table(core.dat, file=paste(path_count, '/', site, '.csv', sep=''),
row.names=FALSE, sep=',')
id.mod5   <- seq(1,length(good.samps))%%5
sample.id <- rep(0, length(good.samps))
sample.id[which(id.mod5 == 0)] = 1
sample.id <- as.factor(sample.id)
props.dat <- data.frame(depths = x$sample.meta$depths[good.samps],  sample.id=sample.id, pol[,most.common] * 100)
m2 <- props.dat
m2[,3:ncol(m2)] <- m2[,3:ncol(m2)] * 5
m.melt  <- melt(props.dat, id = c('depths', 'sample.id'))
m2.melt <- melt(m2, id = c('depths', 'sample.id'))
m <- data.frame(rbind(m.melt, m2.melt),
exagr = factor(rep(c('no', 'yes'), each = nrow(m.melt)),
levels=c('no', 'yes')))
levels(m$variable)[levels(m$variable) == 'RUMEOXYR'] <- 'RUMEX'
m$value[m$value > 15 & m$exagr == 'yes'] <- 15
m$value[m$value > 15 & m$exagr == 'yes'] <- NA
taxa   = unique(m$variable)
for (i in 1:length(taxa)){
taxon = taxa[i]
if (any(m$value[m$variable == taxon]>15,na.rm=TRUE)){
m$value[m$exagr == 'yes' & m$variable == taxon] <- m$value[m$exagr == 'no' & m$variable== taxon]
}
}
min(m$depths)
min(m$depths) - (max(m$depths) - min(m$depths))/100
p <- ggplot(m, aes(y=depths, x=value))+
geom_path(colour='steelblue4', aes(x=value, y=depths, linetype = exagr)) +
geom_vline(x=15, alpha=0) + geom_hline(aes(yintercept=min(m$depths) - (max(m$depths) - min(m$depths))/100, alpha=0)) +
geom_segment(m[m$exagr == 'no',], mapping=aes(y=depths, x=0, yend=depths, xend=value, colour=sample.id)) +
scale_color_manual(values=c('steelblue4', 'darkorange1')) +
facet_grid(.~variable, space='free_x', scale='free_x') +
theme_bw(base_size=10) + ggtitle(site) +
theme(legend.position='none',axis.text.x=element_text(angle=90, hjust=1, vjust=0.5, size=rel(1)), panel.margin = unit(0.5, "lines")) +
scale_x_continuous(expand=c(0,0)) +
scale_y_reverse(expand=c(0,0)) + xlab('percent')
print(p)
i
for (i in 1:5){#nrow(neo.sites)){
print(i)
# get the data from neotoma
x = get_download(as.numeric(neo.sites$datasetID[i]))
coords = c(centers_alb[i,1], centers_alb[i,2])
# make the pollen diagram and
# put the site on a map
plot.pd(x, coords, map=us.shp)
#   plot.map(x, coords, map=us.shp, type='neo')
}
i=1
print(i)
# get the data from neotoma
x = get_download(as.numeric(neo.sites$datasetID[i]))
coords = c(centers_alb[i,1], centers_alb[i,2])
# make the pollen diagram and
# put the site on a map
plot.pd(x, coords, map=us.shp)
site = paste(x$metadata$dataset$collection.handle, '_', x$metadata$dataset$dataset.id, sep='')
#   path = file.path(mainDir, site)
path_pd =  'pollen_diagrams'#file.path(mainDir, 'pollen_diagrams')
if (!file.exists(path_pd)){
dir.create(path_pd)
}
path_count = 'counts'#file.path(mainDir, 'counts')
if (!file.exists(path_count)){
dir.create(path_count)
}
no_age = any(is.na(x$sample.meta$Age))
if (no_age){
age = x$chronologies[1][[1]]$Age
} else{
age = x$sample.meta$Age
}
good.samps <- which(age < 2000)
if (length(good.samps) == 0){
print(paste('WARNING: ', site, ' has no samples younger than 2000 YBP!', sep=''))
return(NULL)
}
pol <- x$counts[good.samps,]
pol.counts <- compile_list(pol, 'WhitmoreSmall')
pol <- pol.counts / rowSums(pol.counts)
pol <- pol[ ,!colnames(pol) %in% 'Other']
markers = c('AMBROSIA', 'RUMEOXYR', 'POACEAE')
most.common <- colnames(pol)[rank(colMeans(pol)) > (ncol(pol) - 10)]
most.common <- unique(c(most.common, markers[markers  %in% colnames(pol)]))
while(length(dev.list()) > 1)dev.off()
try(dev.off())
core.dat <- data.frame(depths = x$sample.meta$depths[good.samps], pol.counts[,most.common])
write.table(core.dat, file=paste(path_count, '/', site, '.csv', sep=''),
row.names=FALSE, sep=',')
id.mod5   <- seq(1,length(good.samps))%%5
sample.id <- rep(0, length(good.samps))
sample.id[which(id.mod5 == 0)] = 1
sample.id <- as.factor(sample.id)
props.dat <- data.frame(depths = x$sample.meta$depths[good.samps],  sample.id=sample.id, pol[,most.common] * 100)
m2 <- props.dat
m2[,3:ncol(m2)] <- m2[,3:ncol(m2)] * 5
m.melt  <- melt(props.dat, id = c('depths', 'sample.id'))
m2.melt <- melt(m2, id = c('depths', 'sample.id'))
m <- data.frame(rbind(m.melt, m2.melt),
exagr = factor(rep(c('no', 'yes'), each = nrow(m.melt)),
levels=c('no', 'yes')))
levels(m$variable)[levels(m$variable) == 'RUMEOXYR'] <- 'RUMEX'
m$value[m$value > 15 & m$exagr == 'yes'] <- 15
m$value[m$value > 15 & m$exagr == 'yes'] <- NA
taxa   = unique(m$variable)
for (i in 1:length(taxa)){
taxon = taxa[i]
if (any(m$value[m$variable == taxon]>15,na.rm=TRUE)){
m$value[m$exagr == 'yes' & m$variable == taxon] <- m$value[m$exagr == 'no' & m$variable== taxon]
}
}
p <- ggplot(m, aes(y=depths, x=value))+
geom_path(colour='steelblue4', aes(x=value, y=depths, linetype = exagr)) +
geom_vline(x=15, alpha=0) + geom_hline(aes(yintercept=min(m$depths) - (max(m$depths) - min(m$depths))/100, alpha=0)) +
geom_segment(m[m$exagr == 'no',], mapping=aes(y=depths, x=0, yend=depths, xend=value, colour=sample.id)) +
scale_color_manual(values=c('steelblue4', 'darkorange1')) +
facet_grid(.~variable, space='free_x', scale='free_x') +
theme_bw(base_size=10) + ggtitle(site) +
theme(legend.position='none',axis.text.x=element_text(angle=90, hjust=1, vjust=0.5, size=rel(1)), panel.margin = unit(0.5, "lines")) +
scale_x_continuous(expand=c(0,0)) +
scale_y_reverse(expand=c(0,0)) + xlab('percent')
print(p)
plot.pd(x, coords, map=us.shp)
source('~/Documents/paleon/pollen/settlement_horizon/r/utils/helpers.r', echo=TRUE)
plot.pd(x, coords, map=us.shp)
i=9
# get the data from neotoma
x = get_download(as.numeric(neo.sites$datasetID[i]))
coords = c(centers_alb[i,1], centers_alb[i,2])
# make the pollen diagram and
# put the site on a map
plot.pd(x, coords, map=us.shp)
i=1
# get the data from neotoma
x = get_download(as.numeric(neo.sites$datasetID[i]))
coords = c(centers_alb[i,1], centers_alb[i,2])
# make the pollen diagram and
# put the site on a map
plot.pd(x, coords, map=us.shp)
for (i in 1:5){#nrow(neo.sites)){
print(i)
# get the data from neotoma
x = get_download(as.numeric(neo.sites$datasetID[i]))
coords = c(centers_alb[i,1], centers_alb[i,2])
# make the pollen diagram and
# put the site on a map
plot.pd(x, coords, map=us.shp)
#   plot.map(x, coords, map=us.shp, type='neo')
}
50*cos(30) + 30*cos(110)
50*sin(30) + 30*sin(110)
70*sin(330) + 70*sin(330)
70*cos(330) + 40*cos(45)
70*sin(330) + 40*sin(45)
180-30-45
70^2+40^2-2*70*40*cos(105)
sqrt(70^2+40^2-2*70*40*cos(105))
cos(330)
sin(330)
sin(30)
cos(30)
cos(360)
cos(2*pi)
?cos
70*sin(330*pi/180) + 40*sin(45*pi/180)
70*cos(330*pi/180) + 40*cos(45*pi/180)
50*(cos(30*pi/180) + cos(110*pi/180))
50*(cos(30*pi/180) + 30*cos(110*pi/180))
50*(sin(30*pi/180) + 30*sin(110*pi/180))
50*sin(30*pi/180) + 30*sin(110*pi/180)
50*cos(30*pi/180) + 30*cos(110*pi/180)
source('~/Documents/paleon/pollen/settlement_horizon/r/utils/helpers.r', echo=TRUE)
for (i in 1:5){#nrow(neo.sites)){
print(i)
# get the data from neotoma
x = get_download(as.numeric(neo.sites$datasetID[i]))
coords = c(centers_alb[i,1], centers_alb[i,2])
# make the pollen diagram and
# put the site on a map
plot.pd(x, coords, map=us.shp)
#   plot.map(x, coords, map=us.shp, type='neo')
}
for (i in 1:10){#nrow(neo.sites)){
print(i)
# get the data from neotoma
x = get_download(as.numeric(neo.sites$datasetID[i]))
coords = c(centers_alb[i,1], centers_alb[i,2])
# make the pollen diagram and
# put the site on a map
plot.pd(x, coords, map=us.shp)
#   plot.map(x, coords, map=us.shp, type='neo')
}
i=7
print(i)
# get the data from neotoma
x = get_download(as.numeric(neo.sites$datasetID[i]))
coords = c(centers_alb[i,1], centers_alb[i,2])
# make the pollen diagram and
# put the site on a map
plot.pd(x, coords, map=us.shp)
i=6
print(i)
# get the data from neotoma
x = get_download(as.numeric(neo.sites$datasetID[i]))
coords = c(centers_alb[i,1], centers_alb[i,2])
# make the pollen diagram and
# put the site on a map
plot.pd(x, coords, map=us.shp)
site = paste(x$metadata$dataset$collection.handle, '_', x$metadata$dataset$dataset.id, sep='')
#   path = file.path(mainDir, site)
path_pd =  'pollen_diagrams'#file.path(mainDir, 'pollen_diagrams')
if (!file.exists(path_pd)){
dir.create(path_pd)
}
path_count = 'counts'#file.path(mainDir, 'counts')
if (!file.exists(path_count)){
dir.create(path_count)
}
no_age = any(is.na(x$sample.meta$Age))
if (no_age){
age = x$chronologies[1][[1]]$Age
} else{
age = x$sample.meta$Age
}
good.samps <- which(age < 2000)
if (length(good.samps) == 0){
print(paste('WARNING: ', site, ' has no samples younger than 2000 YBP!', sep=''))
return(NULL)
}
pol <- x$counts[good.samps,]
pol.counts <- compile_list(pol, 'WhitmoreSmall')
pol <- pol.counts / rowSums(pol.counts)
pol <- pol[ ,!colnames(pol) %in% 'Other']
markers = c('AMBROSIA', 'RUMEOXYR', 'POACEAE')
most.common <- colnames(pol)[rank(colMeans(pol)) > (ncol(pol) - 10)]
most.common <- unique(c(most.common, markers[markers  %in% colnames(pol)]))
while(length(dev.list()) > 1)dev.off()
try(dev.off())
core.dat <- data.frame(depths = x$sample.meta$depths[good.samps], pol.counts[,most.common])
write.table(core.dat, file=paste(path_count, '/', site, '.csv', sep=''),
row.names=FALSE, sep=',')
id.mod5   <- seq(1,length(good.samps))%%5
sample.id <- rep(0, length(good.samps))
sample.id[which(id.mod5 == 0)] = 1
sample.id <- as.factor(sample.id)
props.dat <- data.frame(depths = x$sample.meta$depths[good.samps],  sample.id=sample.id, pol[,most.common] * 100)
m2 <- props.dat
m2[,3:ncol(m2)] <- m2[,3:ncol(m2)] * 5
m.melt  <- melt(props.dat, id = c('depths', 'sample.id'))
m2.melt <- melt(m2, id = c('depths', 'sample.id'))
m <- data.frame(rbind(m.melt, m2.melt),
exagr = factor(rep(c('no', 'yes'), each = nrow(m.melt)),
levels=c('no', 'yes')))
levels(m$variable)[levels(m$variable) == 'RUMEOXYR'] <- 'RUMEX'
m$value[m$value > 15 & m$exagr == 'yes'] <- 15
m$value[m$value > 15 & m$exagr == 'yes'] <- NA
taxa   = unique(m$variable)
for (i in 1:length(taxa)){
taxon = taxa[i]
if (any(m$value[m$variable == taxon]>15,na.rm=TRUE)){
m$value[m$exagr == 'yes' & m$variable == taxon] <- m$value[m$exagr == 'no' & m$variable== taxon]
}
}
p <- ggplot(m, aes(y=depths, x=value))+
geom_path(colour='steelblue4', aes(x=value, y=depths, linetype = exagr)) +
geom_vline(x=15, alpha=0) + geom_hline(aes(yintercept=min(m$depths) - (max(m$depths) - min(m$depths))/100, alpha=0)) +
geom_segment(m[m$exagr == 'no',], mapping=aes(y=depths, x=0, yend=depths, xend=value, colour=sample.id)) +
scale_color_manual(values=c('steelblue4', 'darkorange1')) +
facet_grid(.~variable, space='free_x', scale='free_x') +
theme_bw(base_size=10) + ggtitle(site) +
theme(legend.position='none',axis.text.x=element_text(angle=90, hjust=1, vjust=0.5, size=rel(1)), panel.margin = unit(0.5, "lines")) +
scale_x_continuous(expand=c(0,0)) +
scale_y_reverse(expand=c(0,0)) + xlab('percent')
print(p)
p <- ggplot(m, aes(y=depths, x=value))+
geom_path(colour='steelblue4', aes(x=value, y=depths, linetype = exagr)) +
geom_vline(x=15, alpha=0) + geom_hline(m, aes(yintercept=min(depths) - (max(depths) - min(depths))/100, alpha=0)) +
geom_segment(m[m$exagr == 'no',], mapping=aes(y=depths, x=0, yend=depths, xend=value, colour=sample.id)) +
scale_color_manual(values=c('steelblue4', 'darkorange1')) +
facet_grid(.~variable, space='free_x', scale='free_x') +
theme_bw(base_size=10) + ggtitle(site) +
theme(legend.position='none',axis.text.x=element_text(angle=90, hjust=1, vjust=0.5, size=rel(1)), panel.margin = unit(0.5, "lines")) +
scale_x_continuous(expand=c(0,0)) +
scale_y_reverse(expand=c(0,0)) + xlab('percent')
print(p)
p <- ggplot(m, aes(y=depths, x=value))+
geom_path(colour='steelblue4', aes(x=value, y=depths, linetype = exagr)) +
geom_vline(x=15, alpha=0) + geom_hline(aes(yintercept=min(depths) - (max(depths) - min(depths))/100, alpha=0)) +
geom_segment(m[m$exagr == 'no',], mapping=aes(y=depths, x=0, yend=depths, xend=value, colour=sample.id)) +
scale_color_manual(values=c('steelblue4', 'darkorange1')) +
facet_grid(.~variable, space='free_x', scale='free_x') +
theme_bw(base_size=10) + ggtitle(site) +
theme(legend.position='none',axis.text.x=element_text(angle=90, hjust=1, vjust=0.5, size=rel(1)), panel.margin = unit(0.5, "lines")) +
scale_x_continuous(expand=c(0,0)) +
scale_y_reverse(expand=c(0,0)) + xlab('percent')
hline = min(m$depths) - (max(m$depths) - min(m$depths))/100
p <- ggplot(m, aes(y=depths, x=value))+
geom_path(colour='steelblue4', aes(x=value, y=depths, linetype = exagr)) +
geom_vline(x=15, alpha=0) + geom_hline(aes(yintercept=hline, alpha=0)) +
geom_segment(m[m$exagr == 'no',], mapping=aes(y=depths, x=0, yend=depths, xend=value, colour=sample.id)) +
scale_color_manual(values=c('steelblue4', 'darkorange1')) +
facet_grid(.~variable, space='free_x', scale='free_x') +
theme_bw(base_size=10) + ggtitle(site) +
theme(legend.position='none',axis.text.x=element_text(angle=90, hjust=1, vjust=0.5, size=rel(1)), panel.margin = unit(0.5, "lines")) +
scale_x_continuous(expand=c(0,0)) +
scale_y_reverse(expand=c(0,0)) + xlab('percent')
print(p)
source('~/Documents/paleon/pollen/settlement_horizon/r/utils/helpers.r', echo=TRUE)
for (i in 1:10){#nrow(neo.sites)){
print(i)
# get the data from neotoma
x = get_download(as.numeric(neo.sites$datasetID[i]))
coords = c(centers_alb[i,1], centers_alb[i,2])
# make the pollen diagram and
# put the site on a map
plot.pd(x, coords, map=us.shp)
#   plot.map(x, coords, map=us.shp, type='neo')
}
4
i=4
print(i)
# get the data from neotoma
x = get_download(as.numeric(neo.sites$datasetID[i]))
coords = c(centers_alb[i,1], centers_alb[i,2])
# make the pollen diagram and
# put the site on a map
plot.pd(x, coords, map=us.shp)
site = paste(x$metadata$dataset$collection.handle, '_', x$metadata$dataset$dataset.id, sep='')
#   path = file.path(mainDir, site)
path_pd =  'pollen_diagrams'#file.path(mainDir, 'pollen_diagrams')
if (!file.exists(path_pd)){
dir.create(path_pd)
}
path_count = 'counts'#file.path(mainDir, 'counts')
if (!file.exists(path_count)){
dir.create(path_count)
}
no_age = any(is.na(x$sample.meta$Age))
if (no_age){
age = x$chronologies[1][[1]]$Age
} else{
age = x$sample.meta$Age
}
good.samps <- which(age < 2000)
if (length(good.samps) == 0){
print(paste('WARNING: ', site, ' has no samples younger than 2000 YBP!', sep=''))
return(NULL)
}
pol <- x$counts[good.samps,]
pol.counts <- compile_list(pol, 'WhitmoreSmall')
pol <- pol.counts / rowSums(pol.counts)
pol <- pol[ ,!colnames(pol) %in% 'Other']
markers = c('AMBROSIA', 'RUMEOXYR', 'POACEAE')
most.common <- colnames(pol)[rank(colMeans(pol)) > (ncol(pol) - 10)]
most.common <- unique(c(most.common, markers[markers  %in% colnames(pol)]))
while(length(dev.list()) > 1)dev.off()
try(dev.off())
core.dat <- data.frame(depths = x$sample.meta$depths[good.samps], pol.counts[,most.common])
write.table(core.dat, file=paste(path_count, '/', site, '.csv', sep=''),
row.names=FALSE, sep=',')
id.mod5   <- seq(1,length(good.samps))%%5
sample.id <- rep(0, length(good.samps))
sample.id[which(id.mod5 == 0)] = 1
sample.id <- as.factor(sample.id)
props.dat <- data.frame(depths = x$sample.meta$depths[good.samps],  sample.id=sample.id, pol[,most.common] * 100)
m2 <- props.dat
m2[,3:ncol(m2)] <- m2[,3:ncol(m2)] * 5
m.melt  <- melt(props.dat, id = c('depths', 'sample.id'))
m2.melt <- melt(m2, id = c('depths', 'sample.id'))
m <- data.frame(rbind(m.melt, m2.melt),
exagr = factor(rep(c('no', 'yes'), each = nrow(m.melt)),
levels=c('no', 'yes')))
levels(m$variable)[levels(m$variable) == 'RUMEOXYR'] <- 'RUMEX'
m$value[m$value > 15 & m$exagr == 'yes'] <- 15
m$value[m$value > 15 & m$exagr == 'yes'] <- NA
taxa   = unique(m$variable)
for (i in 1:length(taxa)){
taxon = taxa[i]
if (any(m$value[m$variable == taxon]>15,na.rm=TRUE)){
m$value[m$exagr == 'yes' & m$variable == taxon] <- m$value[m$exagr == 'no' & m$variable== taxon]
}
}
hline = min(m$depths) - (max(m$depths) - min(m$depths))/100
p <- ggplot(m, aes(y=depths, x=value))+
geom_path(colour='steelblue4', aes(x=value, y=depths, linetype = exagr)) +
geom_vline(x=15, alpha=0) + geom_hline(aes(yintercept=hline, alpha=0)) +
geom_segment(m[m$exagr == 'no',], mapping=aes(y=depths, x=0, yend=depths, xend=value, colour=sample.id)) +
scale_color_manual(values=c('steelblue4', 'darkorange1')) +
facet_grid(.~variable, space='free_x', scale='free_x') +
theme_bw(base_size=10) + ggtitle(site) +
theme(legend.position='none',axis.text.x=element_text(angle=90, hjust=1, vjust=0.5, size=rel(1)), panel.margin = unit(0.5, "lines")) +
scale_x_continuous(expand=c(0,0)) +
scale_y_reverse(expand=c(0,0)) + xlab('percent')
print(p)
summary(m$depths)
heaD(m)
head(m)
source('~/Documents/paleon/pollen/settlement_horizon/r/utils/helpers.r', echo=TRUE)
for (i in 1:10){#nrow(neo.sites)){
print(i)
# get the data from neotoma
x = get_download(as.numeric(neo.sites$datasetID[i]))
coords = c(centers_alb[i,1], centers_alb[i,2])
# make the pollen diagram and
# put the site on a map
plot.pd(x, coords, map=us.shp)
#   plot.map(x, coords, map=us.shp, type='neo')
}
i=6
print(i)
# get the data from neotoma
x = get_download(as.numeric(neo.sites$datasetID[i]))
coords = c(centers_alb[i,1], centers_alb[i,2])
# make the pollen diagram and
# put the site on a map
plot.pd(x, coords, map=us.shp)
site = paste(x$metadata$dataset$collection.handle, '_', x$metadata$dataset$dataset.id, sep='')
#   path = file.path(mainDir, site)
path_pd =  'pollen_diagrams'#file.path(mainDir, 'pollen_diagrams')
if (!file.exists(path_pd)){
dir.create(path_pd)
}
path_count = 'counts'#file.path(mainDir, 'counts')
if (!file.exists(path_count)){
dir.create(path_count)
}
no_age = any(is.na(x$sample.meta$Age))
if (no_age){
age = x$chronologies[1][[1]]$Age
} else{
age = x$sample.meta$Age
}
good.samps <- which(age < 2000)
if (length(good.samps) == 0){
print(paste('WARNING: ', site, ' has no samples younger than 2000 YBP!', sep=''))
return(NULL)
}
pol <- x$counts[good.samps,]
pol.counts <- compile_list(pol, 'WhitmoreSmall')
pol <- pol.counts / rowSums(pol.counts)
pol <- pol[ ,!colnames(pol) %in% 'Other']
markers = c('AMBROSIA', 'RUMEOXYR', 'POACEAE')
most.common <- colnames(pol)[rank(colMeans(pol)) > (ncol(pol) - 10)]
most.common <- unique(c(most.common, markers[markers  %in% colnames(pol)]))
while(length(dev.list()) > 1)dev.off()
try(dev.off())
core.dat <- data.frame(depths = x$sample.meta$depths[good.samps], pol.counts[,most.common])
write.table(core.dat, file=paste(path_count, '/', site, '.csv', sep=''),
row.names=FALSE, sep=',')
id.mod5   <- seq(1,length(good.samps))%%5
sample.id <- rep(0, length(good.samps))
sample.id[which(id.mod5 == 0)] = 1
sample.id <- as.factor(sample.id)
props.dat <- data.frame(depths = x$sample.meta$depths[good.samps],  sample.id=sample.id, pol[,most.common] * 100)
m2 <- props.dat
m2[,3:ncol(m2)] <- m2[,3:ncol(m2)] * 5
m.melt  <- melt(props.dat, id = c('depths', 'sample.id'))
m2.melt <- melt(m2, id = c('depths', 'sample.id'))
m <- data.frame(rbind(m.melt, m2.melt),
exagr = factor(rep(c('no', 'yes'), each = nrow(m.melt)),
levels=c('no', 'yes')))
levels(m$variable)[levels(m$variable) == 'RUMEOXYR'] <- 'RUMEX'
m$value[m$value > 15 & m$exagr == 'yes'] <- 15
m$value[m$value > 15 & m$exagr == 'yes'] <- NA
taxa   = unique(m$variable)
for (i in 1:length(taxa)){
taxon = taxa[i]
if (any(m$value[m$variable == taxon]>15,na.rm=TRUE)){
m$value[m$exagr == 'yes' & m$variable == taxon] <- m$value[m$exagr == 'no' & m$variable== taxon]
}
}
hline = min(m$depths) - (max(m$depths) - min(m$depths))/100
print(max(m$depths))
print(min(m$depths))
p <- ggplot(m, aes(y=depths, x=value))+
geom_path(colour='steelblue4', aes(x=value, y=depths, linetype = exagr)) +
geom_vline(x=15, alpha=0) + geom_hline(aes(yintercept=hline, alpha=0)) +
geom_segment(m[m$exagr == 'no',], mapping=aes(y=depths, x=0, yend=depths, xend=value, colour=sample.id)) +
scale_color_manual(values=c('steelblue4', 'darkorange1')) +
facet_grid(.~variable, space='free_x', scale='free_x') +
theme_bw(base_size=10) + ggtitle(site) +
theme(legend.position='none',axis.text.x=element_text(angle=90, hjust=1, vjust=0.5, size=rel(1)), panel.margin = unit(0.5, "lines")) +
scale_x_continuous(expand=c(0,0)) +
scale_y_reverse(expand=c(0,0)) + xlab('percent')
print(p)
help(geom_hline)
source('~/Documents/paleon/pollen/settlement_horizon/r/utils/helpers.r', echo=TRUE)
for (i in 1:10){#nrow(neo.sites)){
print(i)
# get the data from neotoma
x = get_download(as.numeric(neo.sites$datasetID[i]))
coords = c(centers_alb[i,1], centers_alb[i,2])
# make the pollen diagram and
# put the site on a map
plot.pd(x, coords, map=us.shp)
#   plot.map(x, coords, map=us.shp, type='neo')
}
source('~/Documents/paleon/pollen/settlement_horizon/r/utils/helpers.r', echo=TRUE)
for (i in 1:10){#nrow(neo.sites)){
print(i)
# get the data from neotoma
x = get_download(as.numeric(neo.sites$datasetID[i]))
coords = c(centers_alb[i,1], centers_alb[i,2])
# make the pollen diagram and
# put the site on a map
plot.pd(x, coords, map=us.shp)
#   plot.map(x, coords, map=us.shp, type='neo')
}
source('~/Documents/paleon/pollen/settlement_horizon/r/utils/helpers.r', echo=TRUE)
source('~/Documents/paleon/pollen/settlement_horizon/r/make_settlement.r', echo=TRUE)
